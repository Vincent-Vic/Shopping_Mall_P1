<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.iflags.Mall.dao.UserWalletMapper" >
  <resultMap id="BaseResultMap" type="cn.iflags.Mall.pojo.UserWallet" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="balance" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="coin" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="pay_password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="last_login" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, balance, coin, pay_password, last_login, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from iflags_user_wallet
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from iflags_user_wallet
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="cheackPassword" resultType="java.lang.Integer" parameterType="map">
    select
    count(1)
    from iflags_user_wallet
    where user_id = #{userId,jdbcType=INTEGER}
    and pay_password = #{password}
  </select>
    <select id="selectByUserIdPassword" resultMap="BaseResultMap" parameterType="map">
      select
      <include refid="Base_Column_List" />
      from iflags_user_wallet
      where user_id = #{userId,jdbcType=INTEGER}
      and pay_password =#{password}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from iflags_user_wallet
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.iflags.Mall.pojo.UserWallet" >
    insert into iflags_user_wallet (id, user_id, balance, 
      coin, pay_password, last_login, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{balance,jdbcType=DECIMAL}, 
      #{coin,jdbcType=DECIMAL}, #{payPassword,jdbcType=VARCHAR},now(),
      now(), now())
  </insert>
  <insert id="insertSelective" parameterType="cn.iflags.Mall.pojo.UserWallet" >
    insert into iflags_user_wallet
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="coin != null" >
        coin,
      </if>
      <if test="payPassword != null" >
        pay_password,
      </if>
      <if test="lastLogin != null" >
        last_login,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="coin != null" >
        #{coin,jdbcType=DECIMAL},
      </if>
      <if test="payPassword != null" >
        #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null" >
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        now(),
      </if>
      <if test="updateTime != null" >
        now(),
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.iflags.Mall.pojo.UserWallet" >
    update iflags_user_wallet
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="coin != null" >
        coin = #{coin,jdbcType=DECIMAL},
      </if>
      <if test="payPassword != null" >
        pay_password = #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null" >
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = now(),
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.iflags.Mall.pojo.UserWallet" >
    update iflags_user_wallet
    set user_id = #{userId,jdbcType=INTEGER},
      balance = #{balance,jdbcType=DECIMAL},
      coin = #{coin,jdbcType=DECIMAL},
      pay_password = #{payPassword,jdbcType=VARCHAR},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updataPasswordByUserId" parameterType="cn.iflags.Mall.pojo.UserWallet">
    update iflags_user_wallet
    set pay_password = #{password}
    where user_id = #{userId}
  </update>

</mapper>